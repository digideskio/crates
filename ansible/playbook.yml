# This is an example playbook. Change 'vars' to suit your setup, or any other
# file in this directory.


# TODO: use sites-enabled for uwsgi and nginx for multi tenant
# TODO: Postgres?
# TODO: SSL
- hosts: media
  become: yes
  vars:
    # not used yet
    cas_dir    : /srv/cas/
    code_dir   : /srv/crates/
    static_dir : /srv/static/
    mapper_dir : /srv/crates_mapper/
    fqdn       : crates.local

  environment:
    # required for DB operations
    DJANGO_SETTINGS_MODULE : neocrates.crates_settings
    NODE_ENV               : production

  tasks:
    - apt: name={{ item }} state=present update_cache=yes
      sudo: yes
      with_items:
        - nginx
        - uwsgi
        - uwsgi-plugin-python
        - samba
        - python
        - python-dev
        - python-pip
        - nodejs
        - npm

    # the nodejs shipped with 14.04 is broken*
    - stat: path=/usr/bin/node
      register: st
    - name: Fix nodejs
      sudo: yes
      file: src=/usr/bin/nodejs dest=/usr/bin/node state=link
      when: not st.stat.exists

    # the pip shipped with 14.04 is broken*
    - name: Fix pip
      sudo: yes
      command: easy_install -U pip

    # *what happened, ubuntu?

        #- name: Crates code
        #copy: src=.. dest={{code_dir}} owner=www-data group=www-data

    - name: Make crates directories
      sudo: yes
      file: path={{item}} state=directory mode=0755 owner=www-data group=www-data
      with_items:
        - "{{code_dir}}"
        - "{{cas_dir}}"
        - "{{static_dir}}"
        - "{{mapper_dir}}"

    - name: get crates code
      become_user: www-data
      git: repo=https://github.com/naggie/crates.git
            dest={{code_dir}}
            version=HEAD
            depth=1

    - name: Crates config
      become_user: www-data
      template: src=crates_settings.py  dest={{code_dir}}/neocrates/

    - name: Install python dependencies (no virtualenv used yet TODO)
      sudo: yes
      pip:  requirements={{code_dir}}/requirements.txt

    - name: NPM for JS bundler dependencies
      become_user: www-data
      npm: path="{{code_dir}}"
      environment:
        # where to put cache files, as /var/www (~) does not exist
        HOME: /tmp/npm-www-data/

    - name: Build JS bundle
      command: npm run build
      become_user: www-data
      args:
        chdir: "{{code_dir}}"

    - name: Collect static
      command: python manage.py collectstatic --noinput
      become_user: www-data
      args:
        chdir: "{{code_dir}}"

    - name: write the nginx config file
      sudo: yes
      template: src=nginx.conf dest=/etc/nginx/nginx.conf
      notify:
        - restart nginx

    - name: write uwsgi ini
      sudo: yes
      template: src=uwsgi.ini dest=/etc/uwsgi/apps-enabled/crates.ini
      notify:
        - restart uwsgi

    - name: Migrate database
      command: python manage.py migrate --noinput
      become_user: www-data
      args:
        chdir: "{{code_dir}}"

    - name: write the samba config
      sudo: yes
      template: src=smb.conf dest=/etc/samba/smb.conf
      notify:
        - restart samba

    - name: Schedule crates mapper
      cron: name="Crates mapper" minute="22" hour="*" job="{{code_dir}}/manage.py map {{crates_map}}" user=www-data

    - name: uwsgi should start at boot
      service: name=uwsgi state=started enabled=yes

    - name: nginx should start at boot
      service: name=nginx state=started enabled=yes


  handlers:
    - name: restart nginx
      service: name=nginx state=restarted
    - name: restart uwsgi
      service: name=uwsgi state=restarted
    - name: restart samba
      service: name=smbd state=restarted




